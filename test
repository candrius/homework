import requests
import csv
import re
from twilio.rest import Client


class Notification:

    messageType = messageType
    messageReceiver = messageReceiver
    messageSubject = messageSubject
    messageContent = messageContent
    messageSender = messageSender


def send_simple_message(to, subject, text):
    return requests.post(
        "",
        auth=("api", ""),
        data={"from": ">",
              "to": "{}".format(Notification.messageReceiver),
              "subject": "{}".format(Notification.messageSubject),
              "text": "{}".format(Notification.messageContent)})


def validate_email(emailAddress):
    match = re.match('^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$', emailAddress)
    return match


def send_sms_message(number, text):
    account_sid = ''
    auth_token = ''
    client = Client(account_sid, auth_token)

    return client.messages.create(
        body=Notification.messageContent,
        from_=Notification.messageSender, #+37066802165
        to=Notification.messageReceiver
    )


with open('example.csv') as csv_file:
    csvReader = csv.reader(csv_file, delimiter=';')
    header = next(csvReader)
    for rowItem in csvReader:
        emailTag = re.match('email', rowItem[0])
        smsTag = re.match(r'sms', rowItem[0])
        if bool(emailTag) & bool(validate_email(rowItem[1])):
            email = Notification(rowItem[0], rowItem[1], rowItem[2],0)
        elif rowItem[0] == 'sms':
            send_sms_message(rowItem[1], rowItem[2])
        elif not validate_email(rowItem[1]):
            print('Invalid email {} at line {}'.format(rowItem[0], csvReader.line_num))
        else:
            print('wrong type fo record')
